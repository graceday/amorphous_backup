#!/usr/bin/env python3# -*- coding: utf-8 -*-"""Created on Wed Feb 24 15:47:16 2021@author: graceday"""import argparseparser = argparse.ArgumentParser(    description="Generate LAMMPS input files for performing dynamics "                "at 10000K at different densities."    )parser.add_argument(    "--factor",    type=float,    default=1.0,    help="Factor by which to scale in z direction (x, y remain unchanged)."    )parser.add_argument(    "--pot",    type=str,    default="tersoff",    help="tersoff or lcbop."    )args = parser.parse_args()def write_scaled_input():    with open(f"./deform_{factor:.2f}_{pair_style}/deform_{factor:.2f}_{pair_style}.inpt", "w") as f:        f.write(f"log log.deform_{factor:.2f}_{pair_style} \n"                "units metal \n"                "\n"                "atom_style atomic \n"                "dimension 3 \n"                "boundary p p p \n"                "\n"                "read_restart restart.melt \n"                "\n"                "mass 1 12.00 \n"                "\n"                f"pair_style {pair_style} \n"                f"# pair_coeff * * /usr/local/Cellar/lammps/2020-10-29/share/lammps/potentials/{pair_coeff} \n"                f"pair_coeff * * /home/dirac/oxford/newc5436/LAMMPS_potentials/{pair_coeff} \n"                "\n"                "thermo 1000 \n"                "thermo_style custom step atoms temp pe etotal vol press density \n"                "\n"                f"dump 1 all atom 1000 deform_{factor:.2f}_{pair_style}.lammpstrj \n"                "dump_modify 1 scale no \n"                "dump_modify 1 first yes \n"                "\n"                f"fix 1 all deform 100 z scale {factor} \n"                "run 10000 \n"                "unfix 1 \n"                "\n"                "fix 2 all nvt temp 10000 10000 0.01 \n"                )        for i in range(10000, 110000, 10000):            f.write("run 10000 \n"                    f"write_restart restart.deform_{factor:.2f}_{pair_style}_{i} \n"                    "\n"                    )        f.write("variable density equal density \n"                f"print ${{density}} file ./deform_{factor:.2f}_{pair_style}_density.dat \n"                "unfix 2 \n"                "undump 1 \n"                )def main():    write_scaled_input()    print(f"Successfully wrote input file to deform_{factor:.2f}_{pair_style}.inpt.")if __name__ == "__main__":    factor = args.factor    pair_style = args.pot    if pair_style == "tersoff":        pair_coeff = "SiCGe.tersoff C"    elif pair_style == "lcbop":        pair_coeff = "C.lcbop C"    else:        quit("Invalid potential entered.")    main()